apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-service-account
  namespace: default
---
kind: Service
apiVersion: v1
metadata:
  name: postgressvc
spec:
  selector:
    app: testdep
    tier: database
    state: stable
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_USER: arnout
  POSTGRES_PASSWORD: "123"
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: postgresdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testdep
      tier: database
  template: 
    metadata:
      labels:
        app: testdep
        tier: database
        state: stable
        image: postgres
    spec:
      nodeSelector:
        planner: "true"
      containers:
      - name: example
        image: postgres:10.14
        ports:
          - name: startup-port
            containerPort: 5432
        envFrom:
          - configMapRef:
              name: postgres-config
---
apiVersion: v1
kind: Service
metadata:
  name: upgradeplannersvc
spec:
  selector:
    app: testdep
    tier: frontend
  type: NodePort
  ports:
  - protocol: "TCP"
    port: 8080
    targetPort: 8080
    nodePort: 30123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upgradeplanner
spec:
  selector:
    matchLabels:
      app: testdep
      tier: frontend
      track: stable
  replicas: 1
  template:
    metadata:
      name: upgradeplanner-pod
      labels:
        app: testdep
        tier: frontend
        track: stable
    spec:
      nodeSelector:
        planner: "true"
      serviceAccountName: api-service-account
      containers:
      - name: upgradeplanner
        image: "tourna/upgradeplanner"
        imagePullPolicy: Always
      nodeSelector:
        planner: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: service-api
rules:
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - nodes
  - pods
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get 
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: service-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: service-api
subjects:
- kind: ServiceAccount
  name: api-service-account
  namespace: default   
